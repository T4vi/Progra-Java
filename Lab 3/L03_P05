package lab03;

/**
 * @author Tavi
 * @descripion Problem 5
 */
public interface GeometricForm
{
	double calcArea();
	double calcArea(double x);
	double calcArea(double x, double y);
	double calcPerim();
	double calcPerim(double x);
	double calcPerim(double x, double y);
}

class Square implements GeometricForm 
{

	private double l;

	@Override
	public double calcArea(double x) {
		return x * x;
	}

	public double calcArea(double x, double y) {
		return calcArea(x);
	}

	public double calcPerim(double x) {
		return 4 * x;
	}

	public double calcPerim(double x, double y) {
		return calcPerim(x);
	}
	
	public double calcArea() {
		return calcArea(l);
	}

	public double calcPerim() {
		return calcPerim(l);
	}
	
	public Square()  {
		this.setL(0);
	}

	public Square(double l) {
		this.setL(l);
	}

	public Square(Square s) {
		this.setL(s.getL());
		this.l = s.getL();
	}

	public double getL() {
		return l;
	}

	public void setL(double l) {
		this.l = l;
	}
	
	public static double addSquareToArray(Square s, Square[] sarray, int pos) {
		if (pos > sarray.length)
			return -1;
		
		sarray[pos] = new Square(s);
		return 0;
	}


}

class Circle implements GeometricForm 
{

	private double r;
	private final double PI = 3.14159265358979;

	@Override
	public double calcArea(double x) {
		return PI * x * x;
	}

	public double calcArea(double x, double y) {
		return calcArea(x);
	}

	public double calcPerim(double x) {
		return 2 * PI * x;
	}

	public double calcPerim(double x, double y) {
		return calcPerim(x);
	}
	
	public double calcArea() {
		return calcArea(r);
	}

	public double calcPerim() {
		return calcPerim(r);
	}
	
	public Circle()  {
		this.setR(0);
	}

	public Circle(double r) {
		this.setR(r);
	}

	public Circle(Circle c) {
		this.setR(c.getR());
	}

	public double getR() {
		return r;
	}

	public void setR(double r) {
		this.r = r;
	}
	
	public static double addCircleToArray(Circle c, Circle[] carray, int pos) {
		if (pos > carray.length)
			return -1;
		
		carray[pos] = new Circle(c);
		return 0;
	}
}

class Rectangle implements GeometricForm 
{

	private double a,b;

	@Override
	public double calcArea(double x) {
		return calcArea(x,x);
	}

	public double calcArea(double x, double y) {
		return a * b;
	}

	public double calcPerim(double x) {
		return calcPerim(x,x);
	}

	public double calcPerim(double x, double y) {
		return 2 * x + 2 * y;
	}
	
	public double calcArea() {
		return calcArea(a,b);
	}

	public double calcPerim() {
		return calcPerim(a,b);
	}
	
	public Rectangle()  {
		this.setA(0);
		this.setB(0);
	}

	public Rectangle(double a, double b) {
		this.setA(a);
		this.setB(b);
	}

	public Rectangle(Rectangle r) {
		this.setA(r.getA());
		this.setB(r.getB());
	}

	public double getA() {
		return a;
	}

	public void setA(double a) {
		this.a = a;
	}

	public double getB() {
		return b;
	}

	public void setB(double b) {
		this.b = b;
	}
	
	public static double addRectangleToArray(Rectangle r, Rectangle[] rarray, int pos) {
		if (pos > rarray.length)
			return -1;
		
		rarray[pos] = new Rectangle(r);
		return 0;
	}
}

class mainclass
{
	public static void main(String args[])
	{
		//Object shapes[] 		= new Object[10];
		
		Square squares[] 		= new Square[10];
		Circle circles[] 		= new Circle[10];
		Rectangle rectangles[] 	= new Rectangle[10];
		
		// ....
		
		double s = 0;
		for (int i = 0; i < squares.length; i++) {
			s += squares[i].calcArea();
		}
		
		
		
	}

}
